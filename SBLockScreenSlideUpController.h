/**
 * This header is generated by class-dump-z 0.2b.
 *
 * Source: (null)
 */

#import <XXUnknownSuperclass.h> // Unknown library
#import "SBCoordinatedPresenting.h"
#import "SBPresentingDelegate.h"
#import "SpringBoard-Structs.h"

@class NSSet, SBLockScreenBounceAnimator, SBDisableAppStatusBarAlphaChangesAssertion, UIView, SBLockScreenView, SBBounceSettings, _UIDynamicValueAnimation;

__attribute__((visibility("hidden")))
@interface SBLockScreenSlideUpController : XXUnknownSuperclass <SBPresentingDelegate, SBCoordinatedPresenting> {
	BOOL _isInScreenOffMode;
	UIView* _slidingStatusBarView;
	SBLockScreenView* _lockScreenView;
	SBLockScreenBounceAnimator* _bounceAnimator;
	_UIDynamicValueAnimation* _dynamicAnimation;
	id<SBPresentingDelegate> _presentingDelegate;
	SBBounceSettings* _bounceSettings;
	BOOL _didAbortBounce;
	SBDisableAppStatusBarAlphaChangesAssertion* _disableStatusBarAssertion;
	float _boundaryTranslationInY;
}
@property(readonly, assign, nonatomic) NSSet* tapExcludedViews;
@property(readonly, assign, nonatomic) NSSet* conflictingGestures;
@property(readonly, assign, nonatomic) NSSet* gestures;
@property(assign, nonatomic) id<SBPresentingDelegate> presentingDelegate;
@property(readonly, assign, nonatomic) unsigned hintEdge;
@property(readonly, assign, nonatomic) float hintDisplacement;
@property(readonly, assign, nonatomic) int coordinatedPresentingControllerIdentifier;
@property(assign, nonatomic) float boundaryTranslationInY;
@property(assign, nonatomic) BOOL didAbortBounce;
@property(retain, nonatomic) SBDisableAppStatusBarAlphaChangesAssertion* disableStatusBarAssertion;
@property(retain) SBLockScreenView* lockScreenView;
@property(readonly, retain) SBLockScreenBounceAnimator* bounceAnimator;
+(id)lockScreenViewFakeStatusBar;
-(id)_newDynamicAnimationForTargetValue:(double)targetValue withInitialVelocity:(double)initialVelocity;
-(id)_newBounceAnimatorWithGrabberView:(id)grabberView;
-(void)presentingControllerDidFinishPresentation:(id)presentingController;
-(void)presentingController:(id)controller willHandleGesture:(id)gesture;
-(BOOL)presentingController:(id)controller gestureRecognizerShouldBegin:(id)gestureRecognizer;
-(BOOL)presentingController:(id)controller gestureRecognizer:(id)recognizer shouldReceiveTouch:(id)touch;
-(void)abortDynamicAnimationForScreenOff;
-(void)setInScreenOffMode:(BOOL)screenOffMode;
-(void)hideSlidingStatusBar;
-(void)treatCurrentPositionAsBoundaryforGesture:(id)gesture;
-(void)reenableGestureRecognizer:(id)recognizer;
-(void)cancelGestureRecognizer:(id)recognizer;
-(void)abortAnimatedTransition;
-(void)_animateSlideUpWithVelocity:(CGPoint)velocity completion:(id)completion;
-(void)_animateSlideDownWithVelocity:(CGPoint)velocity completion:(id)completion;
-(void)_finishSlideDownWithCompletion:(id)completion;
-(void)endTransitionWithVelocity:(CGPoint)velocity completion:(id)completion;
-(float)_foregroundTranslationForLocation:(CGPoint)location;
-(void)updateTransitionWithTouchLocation:(CGPoint)touchLocation velocity:(CGPoint)velocity;
-(void)beginPresentationWithTouchLocation:(CGPoint)touchLocation;
-(BOOL)isPresentingControllerTransitioning;
-(void)_commonGestureCleanup;
-(void)finalizeGesture;
-(void)cleanupFromGesture;
-(void)prepareForSlideUpAnimation;
-(void)translateSlidingViewByY:(float)y;
-(void)setGrabberOnLockScreen:(id)screen;
-(id)grabberView;
-(void)dealloc;
-(id)init;
@end

